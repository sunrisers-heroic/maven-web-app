#!/bin/bash

# --- Simple Kubernetes Master Node Setup Script for Debian ---

echo "--- Starting Kubernetes Master Node Installation ---"
echo "This script will set up your Debian VM as a Kubernetes Master node."
echo "It includes Docker, kubeadm, kubelet, kubectl, and Flannel network setup."
echo "It assumes a fresh Debian-based system with sufficient resources."
echo ""

# --- Step 1: Update System Packages ---
echo "--- Step 1: Updating System Packages ---"
echo "Ensuring your system has the latest package information."
sudo apt update -y
sudo apt upgrade -y
echo "System packages updated and upgraded."
echo ""

# --- Step 2: Install Docker ---
echo "--- Step 2: Installing Docker ---"
echo "Docker is the container runtime used by Kubernetes."
sudo apt install docker.io -y
echo "Docker installed."

echo "Enabling Docker to start automatically on boot..."
sudo systemctl enable docker

echo "Starting Docker service..."
sudo systemctl start docker

echo "Verifying Docker installation:"
sudo docker version --format '{{.Server.Version}}'
echo "Docker installation complete."
echo ""

# --- Step 3: Disable Swap ---
echo "--- Step 3: Disabling Swap ---"
echo "Kubernetes requires swap to be disabled for proper operation."
sudo swapoff -a
# Remove swap entry from /etc/fstab to make it permanent
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
echo "Swap disabled."
echo ""

# --- Step 4: Add Kubernetes APT Repository ---
echo "--- Step 4: Adding Kubernetes APT Repository ---"
echo "This allows us to install kubeadm, kubelet, and kubectl."

echo "Installing necessary packages for apt repository setup..."
sudo apt install -y apt-transport-https ca-certificates curl

echo "Downloading and adding Kubernetes GPG key..."
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

echo "Adding Kubernetes APT repository to sources list..."
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

echo "Updating package lists with the new Kubernetes repository..."
sudo apt update -y
echo "Kubernetes APT repository added."
echo ""

# --- Step 5: Install Kubeadm, Kubelet, Kubectl ---
echo "--- Step 5: Installing Kubeadm, Kubelet, Kubectl ---"
echo "These are the essential Kubernetes tools."
sudo apt install -y kubelet kubeadm kubectl
echo "Kubernetes tools installed."

echo "Holding Kubernetes packages to prevent accidental upgrades that might break the cluster..."
sudo apt-mark hold kubelet kubeadm kubectl
echo "Kubernetes packages held."
echo ""

# --- Step 6: Configure Kubelet Cgroup Driver ---
echo "--- Step 6: Configuring Kubelet Cgroup Driver ---"
echo "Ensuring Kubelet uses the same cgroup driver as Docker (systemd)."
sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json > /dev/null <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
sudo systemctl restart docker
sudo systemctl restart kubelet
echo "Kubelet cgroup driver configured."
echo ""

# --- Step 7: Initialize Kubernetes Master Node ---
echo "--- Step 7: Initializing Kubernetes Master Node ---"
echo "This command sets up the control plane components."
echo "Using Flannel for pod network CIDR."
sudo kubeadm init --pod-network-cidr=10.244.0.0/16

echo "Kubernetes master initialization complete."
echo ""

# --- Step 8: Configure Kubectl for Current User ---
echo "--- Step 8: Configuring Kubectl for Current User ---"
echo "Setting up access to the cluster for your regular user."
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
echo "Kubectl configured."
echo ""

# --- Step 9: Install Flannel Pod Network ---
echo "--- Step 9: Installing Flannel Pod Network ---"
echo "Flannel provides network connectivity between pods across nodes."
kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
echo "Flannel network installed."
echo ""

echo "--- Kubernetes Master Node Setup Finished! ---"
echo "Next Steps:"
echo "1. Verify Master Node Status: Run 'kubectl get nodes' (it might show 'NotReady' for a moment)."
echo "2. Get Join Command for Worker Nodes: Run 'sudo kubeadm token create --print-join-command' on this master node."
echo "   You will need this command to join worker nodes to this cluster."
echo ""
echo "Important Note: Ensure necessary firewall rules are open for Kubernetes communication (e.g., ports 6443, 2379-2380, 10250-10252, 10257, 10259 on master)."

